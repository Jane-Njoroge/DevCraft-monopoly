{"ast":null,"code":"import React from \"react\";\n// Define the Monopoly board properties\nconst board = [{\n  name: \"GO\",\n  type: \"go\"\n}, {\n  name: \"Mediterranean Avenue\",\n  type: \"property\",\n  color: \"brown\",\n  price: 60,\n  rent: 2\n}, {\n  name: \"Community Chest\",\n  type: \"community\"\n}, {\n  name: \"Baltic Avenue\",\n  type: \"property\",\n  color: \"brown\",\n  price: 60,\n  rent: 4\n}, {\n  name: \"Income Tax\",\n  type: \"tax\"\n}, {\n  name: \"Reading Railroad\",\n  type: \"railroad\",\n  price: 200,\n  rent: 25\n}, {\n  name: \"Oriental Avenue\",\n  type: \"property\",\n  color: \"lightBlue\",\n  price: 100,\n  rent: 6\n}, {\n  name: \"Chance\",\n  type: \"chance\"\n}, {\n  name: \"Vermont Avenue\",\n  type: \"property\",\n  color: \"lightBlue\",\n  price: 100,\n  rent: 6\n}, {\n  name: \"Connecticut Avenue\",\n  type: \"property\",\n  color: \"lightBlue\",\n  price: 120,\n  rent: 8\n}, {\n  name: \"Jail\",\n  type: \"jail\"\n}, {\n  name: \"St. Charles Place\",\n  type: \"property\",\n  color: \"pink\",\n  price: 140,\n  rent: 10\n}, {\n  name: \"Electric Company\",\n  type: \"utility\",\n  price: 150,\n  rent: 0\n},\n// Rent depends on dice roll\n{\n  name: \"States Avenue\",\n  type: \"property\",\n  color: \"pink\",\n  price: 140,\n  rent: 10\n}, {\n  name: \"Virginia Avenue\",\n  type: \"property\",\n  color: \"pink\",\n  price: 160,\n  rent: 12\n}, {\n  name: \"Pennsylvania Railroad\",\n  type: \"railroad\",\n  price: 200,\n  rent: 25\n}, {\n  name: \"St. James Place\",\n  type: \"property\",\n  color: \"orange\",\n  price: 180,\n  rent: 14\n}, {\n  name: \"Community Chest\",\n  type: \"community\"\n}, {\n  name: \"Tennessee Avenue\",\n  type: \"property\",\n  color: \"orange\",\n  price: 180,\n  rent: 14\n}, {\n  name: \"New York Avenue\",\n  type: \"property\",\n  color: \"orange\",\n  price: 200,\n  rent: 16\n}, {\n  name: \"Free Parking\",\n  type: \"freeParking\"\n}, {\n  name: \"Kentucky Avenue\",\n  type: \"property\",\n  color: \"red\",\n  price: 220,\n  rent: 18\n}, {\n  name: \"Chance\",\n  type: \"chance\"\n}, {\n  name: \"Indiana Avenue\",\n  type: \"property\",\n  color: \"red\",\n  price: 220,\n  rent: 18\n}, {\n  name: \"Illinois Avenue\",\n  type: \"property\",\n  color: \"red\",\n  price: 240,\n  rent: 20\n}, {\n  name: \"B&O Railroad\",\n  type: \"railroad\",\n  price: 200,\n  rent: 25\n}, {\n  name: \"Atlantic Avenue\",\n  type: \"property\",\n  color: \"yellow\",\n  price: 260,\n  rent: 22\n}, {\n  name: \"Ventnor Avenue\",\n  type: \"property\",\n  color: \"yellow\",\n  price: 260,\n  rent: 22\n}, {\n  name: \"Water Works\",\n  type: \"utility\",\n  price: 150,\n  rent: 0\n},\n// Rent depends on dice roll\n{\n  name: \"Marvin Gardens\",\n  type: \"property\",\n  color: \"yellow\",\n  price: 280,\n  rent: 24\n}, {\n  name: \"Go to Jail\",\n  type: \"goToJail\"\n}, {\n  name: \"Pacific Avenue\",\n  type: \"property\",\n  color: \"green\",\n  price: 300,\n  rent: 26\n}, {\n  name: \"North Carolina Avenue\",\n  type: \"property\",\n  color: \"green\",\n  price: 300,\n  rent: 26\n}, {\n  name: \"Community Chest\",\n  type: \"community\"\n}, {\n  name: \"Pennsylvania Avenue\",\n  type: \"property\",\n  color: \"green\",\n  price: 320,\n  rent: 28\n}, {\n  name: \"Short Line Railroad\",\n  type: \"railroad\",\n  price: 200,\n  rent: 25\n}, {\n  name: \"Chance\",\n  type: \"chance\"\n}, {\n  name: \"Park Place\",\n  type: \"property\",\n  color: \"darkBlue\",\n  price: 350,\n  rent: 35\n}, {\n  name: \"Luxury Tax\",\n  type: \"tax\"\n}, {\n  name: \"Boardwalk\",\n  type: \"property\",\n  color: \"darkBlue\",\n  price: 400,\n  rent: 50\n}];\n\n// Define Player class\nclass Player {\n  constructor(name, startingMoney = 1500) {\n    this.name = name;\n    this.money = startingMoney;\n    this.position = 0;\n    this.properties = [];\n    this.inJail = false;\n    this.jailTurns = 0;\n  }\n  move(spaces) {\n    this.position = (this.position + spaces) % board.length;\n    console.log(`${this.name} moved to ${board[this.position].name}`);\n    this.landOnSpace();\n  }\n  landOnSpace() {\n    const space = board[this.position];\n    console.log(`${this.name} landed on ${space.name}`);\n    switch (space.type) {\n      case \"property\":\n        this.handleProperty(space);\n        break;\n      case \"railroad\":\n        this.handleRailroad(space);\n        break;\n      case \"utility\":\n        this.handleUtility(space);\n        break;\n      case \"tax\":\n        this.payTax(space);\n        break;\n      case \"go\":\n        this.collectGo();\n        break;\n      case \"jail\":\n        // Visiting Jail\n        console.log(\"Just visiting!\");\n        break;\n      case \"goToJail\":\n        this.goToJail();\n        break;\n      case \"community\":\n        this.drawCommunityChest();\n        break;\n      case \"chance\":\n        this.drawChance();\n        break;\n      case \"freeParking\":\n        console.log(\"Free Parking! Take a break.\");\n        break;\n      default:\n        console.log(\"Nothing happens.\");\n    }\n  }\n  handleProperty(space) {\n    if (space.owner) {\n      if (space.owner !== this) {\n        this.payRent(space);\n      } else {\n        console.log(\"You own this property.\");\n      }\n    } else {\n      this.offerPurchase(space);\n    }\n  }\n  handleRailroad(space) {\n    if (space.owner) {\n      if (space.owner !== this) {\n        this.payRailroadRent(space);\n      } else {\n        console.log(\"You own this railroad.\");\n      }\n    } else {\n      this.offerPurchase(space);\n    }\n  }\n  handleUtility(space) {\n    if (space.owner) {\n      if (space.owner !== this) {\n        this.payUtilityRent(space);\n      } else {\n        console.log(\"You own this utility.\");\n      }\n    } else {\n      this.offerPurchase(space);\n    }\n  }\n  buyProperty(space) {\n    if (this.money >= space.price) {\n      this.money -= space.price;\n      this.properties.push(space);\n      space.owner = this;\n      console.log(`${this.name} bought ${space.name} for $${space.price}`);\n    } else {\n      console.log(`${this.name} does not have enough money to buy ${space.name}`);\n    }\n  }\n  payRent(space) {\n    const rent = space.rent;\n    this.money -= rent;\n    space.owner.money += rent;\n    console.log(`${this.name} paid $${rent} rent to ${space.owner.name} for ${space.name}`);\n    if (this.money <= 0) {\n      this.declareBankruptcy();\n    }\n  }\n  payRailroadRent(space) {\n    // Simplified railroad rent based on number of railroads owned\n    const numRailroads = space.owner.properties.filter(prop => prop.type === \"railroad\").length;\n    let rent = space.rent; // Base rent\n    if (numRailroads === 2) rent = 50;else if (numRailroads === 3) rent = 100;else if (numRailroads === 4) rent = 200;\n    this.money -= rent;\n    space.owner.money += rent;\n    console.log(`${this.name} paid $${rent} rent to ${space.owner.name} for ${space.name}`);\n    if (this.money <= 0) {\n      this.declareBankruptcy();\n    }\n  }\n  payUtilityRent(space) {\n    // Rent for utility is dice roll * multiplier (4 or 10)\n    const diceRoll = rollDice();\n    let multiplier = 4;\n    if (space.owner.properties.filter(prop => prop.type === \"utility\").length === 2) {\n      multiplier = 10;\n    }\n    const rent = diceRoll * multiplier;\n    this.money -= rent;\n    space.owner.money += rent;\n    console.log(`${this.name} rolled ${diceRoll} and paid $${rent} rent to ${space.owner.name} for ${space.name}`);\n    if (this.money <= 0) {\n      this.declareBankruptcy();\n    }\n  }\n  payTax(space) {\n    let taxAmount = space.name === \"Income Tax\" ? 200 : 100; // Example tax amounts\n    this.money -= taxAmount;\n    console.log(`${this.name} paid $${taxAmount} for ${space.name}`);\n    if (this.money <= 0) {\n      this.declareBankruptcy();\n    }\n  }\n  collectGo() {\n    this.money += 200;\n    console.log(`${this.name} collected $200 for passing Go.`);\n  }\n  goToJail() {\n    this.inJail = true;\n    this.jailTurns = 3; // Standard 3 turns in jail\n    this.position = 10; // Jail position\n    console.log(`${this.name} is sent to Jail!`);\n  }\n  drawCommunityChest() {\n    // Placeholder for Community Chest logic\n    console.log(`${this.name} drew a Community Chest card.`);\n  }\n  drawChance() {\n    // Placeholder for Chance logic\n    console.log(`${this.name} drew a Chance card.`);\n  }\n  offerPurchase(space) {\n    // Basic purchase offer - improve with UI and player choice\n    if (confirm(`${this.name}, do you want to buy ${space.name} for $${space.price}?`)) {\n      this.buyProperty(space);\n    } else {\n      console.log(`${this.name} declined to buy ${space.name}.`);\n    }\n  }\n  declareBankruptcy() {\n    console.log(`${this.name} has declared bankruptcy and is out of the game!`);\n    // Implement logic to remove player from the game, transfer assets, etc.\n  }\n}\n\n// Helper Functions\nfunction rollDice() {\n  return Math.floor(Math.random() * 6) + 1; // Dice roll between 1-6\n}\n\n// Example game setup\nconst player1 = new Player(\"Alice\");\nconst player2 = new Player(\"Bob\");\n\n// Example gameplay\nplayer1.move(rollDice() + rollDice());\nplayer2.move(rollDice() + rollDice());\nplayer1.move(5);","map":{"version":3,"names":["React","board","name","type","color","price","rent","Player","constructor","startingMoney","money","position","properties","inJail","jailTurns","move","spaces","length","console","log","landOnSpace","space","handleProperty","handleRailroad","handleUtility","payTax","collectGo","goToJail","drawCommunityChest","drawChance","owner","payRent","offerPurchase","payRailroadRent","payUtilityRent","buyProperty","push","declareBankruptcy","numRailroads","filter","prop","diceRoll","rollDice","multiplier","taxAmount","confirm","Math","floor","random","player1","player2"],"sources":["/home/wangui/Phase5/monopoly-frontend/src/components/Board.js"],"sourcesContent":["import React from \"react\";\n// Define the Monopoly board properties\nconst board = [\n  { name: \"GO\", type: \"go\" },\n  {\n    name: \"Mediterranean Avenue\",\n    type: \"property\",\n    color: \"brown\",\n    price: 60,\n    rent: 2,\n  },\n  { name: \"Community Chest\", type: \"community\" },\n  {\n    name: \"Baltic Avenue\",\n    type: \"property\",\n    color: \"brown\",\n    price: 60,\n    rent: 4,\n  },\n  { name: \"Income Tax\", type: \"tax\" },\n  { name: \"Reading Railroad\", type: \"railroad\", price: 200, rent: 25 },\n  {\n    name: \"Oriental Avenue\",\n    type: \"property\",\n    color: \"lightBlue\",\n    price: 100,\n    rent: 6,\n  },\n  { name: \"Chance\", type: \"chance\" },\n  {\n    name: \"Vermont Avenue\",\n    type: \"property\",\n    color: \"lightBlue\",\n    price: 100,\n    rent: 6,\n  },\n  {\n    name: \"Connecticut Avenue\",\n    type: \"property\",\n    color: \"lightBlue\",\n    price: 120,\n    rent: 8,\n  },\n  { name: \"Jail\", type: \"jail\" },\n  {\n    name: \"St. Charles Place\",\n    type: \"property\",\n    color: \"pink\",\n    price: 140,\n    rent: 10,\n  },\n  { name: \"Electric Company\", type: \"utility\", price: 150, rent: 0 }, // Rent depends on dice roll\n  {\n    name: \"States Avenue\",\n    type: \"property\",\n    color: \"pink\",\n    price: 140,\n    rent: 10,\n  },\n  {\n    name: \"Virginia Avenue\",\n    type: \"property\",\n    color: \"pink\",\n    price: 160,\n    rent: 12,\n  },\n  { name: \"Pennsylvania Railroad\", type: \"railroad\", price: 200, rent: 25 },\n  {\n    name: \"St. James Place\",\n    type: \"property\",\n    color: \"orange\",\n    price: 180,\n    rent: 14,\n  },\n  { name: \"Community Chest\", type: \"community\" },\n  {\n    name: \"Tennessee Avenue\",\n    type: \"property\",\n    color: \"orange\",\n    price: 180,\n    rent: 14,\n  },\n  {\n    name: \"New York Avenue\",\n    type: \"property\",\n    color: \"orange\",\n    price: 200,\n    rent: 16,\n  },\n  { name: \"Free Parking\", type: \"freeParking\" },\n  {\n    name: \"Kentucky Avenue\",\n    type: \"property\",\n    color: \"red\",\n    price: 220,\n    rent: 18,\n  },\n  { name: \"Chance\", type: \"chance\" },\n  {\n    name: \"Indiana Avenue\",\n    type: \"property\",\n    color: \"red\",\n    price: 220,\n    rent: 18,\n  },\n  {\n    name: \"Illinois Avenue\",\n    type: \"property\",\n    color: \"red\",\n    price: 240,\n    rent: 20,\n  },\n  { name: \"B&O Railroad\", type: \"railroad\", price: 200, rent: 25 },\n  {\n    name: \"Atlantic Avenue\",\n    type: \"property\",\n    color: \"yellow\",\n    price: 260,\n    rent: 22,\n  },\n  {\n    name: \"Ventnor Avenue\",\n    type: \"property\",\n    color: \"yellow\",\n    price: 260,\n    rent: 22,\n  },\n  { name: \"Water Works\", type: \"utility\", price: 150, rent: 0 }, // Rent depends on dice roll\n  {\n    name: \"Marvin Gardens\",\n    type: \"property\",\n    color: \"yellow\",\n    price: 280,\n    rent: 24,\n  },\n  { name: \"Go to Jail\", type: \"goToJail\" },\n  {\n    name: \"Pacific Avenue\",\n    type: \"property\",\n    color: \"green\",\n    price: 300,\n    rent: 26,\n  },\n  {\n    name: \"North Carolina Avenue\",\n    type: \"property\",\n    color: \"green\",\n    price: 300,\n    rent: 26,\n  },\n  { name: \"Community Chest\", type: \"community\" },\n  {\n    name: \"Pennsylvania Avenue\",\n    type: \"property\",\n    color: \"green\",\n    price: 320,\n    rent: 28,\n  },\n  { name: \"Short Line Railroad\", type: \"railroad\", price: 200, rent: 25 },\n  { name: \"Chance\", type: \"chance\" },\n  {\n    name: \"Park Place\",\n    type: \"property\",\n    color: \"darkBlue\",\n    price: 350,\n    rent: 35,\n  },\n  { name: \"Luxury Tax\", type: \"tax\" },\n  {\n    name: \"Boardwalk\",\n    type: \"property\",\n    color: \"darkBlue\",\n    price: 400,\n    rent: 50,\n  },\n];\n\n// Define Player class\nclass Player {\n  constructor(name, startingMoney = 1500) {\n    this.name = name;\n    this.money = startingMoney;\n    this.position = 0;\n    this.properties = [];\n    this.inJail = false;\n    this.jailTurns = 0;\n  }\n\n  move(spaces) {\n    this.position = (this.position + spaces) % board.length;\n    console.log(`${this.name} moved to ${board[this.position].name}`);\n    this.landOnSpace();\n  }\n\n  landOnSpace() {\n    const space = board[this.position];\n    console.log(`${this.name} landed on ${space.name}`);\n\n    switch (space.type) {\n      case \"property\":\n        this.handleProperty(space);\n        break;\n      case \"railroad\":\n        this.handleRailroad(space);\n        break;\n      case \"utility\":\n        this.handleUtility(space);\n        break;\n      case \"tax\":\n        this.payTax(space);\n        break;\n      case \"go\":\n        this.collectGo();\n        break;\n      case \"jail\":\n        // Visiting Jail\n        console.log(\"Just visiting!\");\n        break;\n      case \"goToJail\":\n        this.goToJail();\n        break;\n      case \"community\":\n        this.drawCommunityChest();\n        break;\n      case \"chance\":\n        this.drawChance();\n        break;\n      case \"freeParking\":\n        console.log(\"Free Parking! Take a break.\");\n        break;\n      default:\n        console.log(\"Nothing happens.\");\n    }\n  }\n  handleProperty(space) {\n    if (space.owner) {\n      if (space.owner !== this) {\n        this.payRent(space);\n      } else {\n        console.log(\"You own this property.\");\n      }\n    } else {\n      this.offerPurchase(space);\n    }\n  }\n\n  handleRailroad(space) {\n    if (space.owner) {\n      if (space.owner !== this) {\n        this.payRailroadRent(space);\n      } else {\n        console.log(\"You own this railroad.\");\n      }\n    } else {\n      this.offerPurchase(space);\n    }\n  }\n  handleUtility(space) {\n    if (space.owner) {\n      if (space.owner !== this) {\n        this.payUtilityRent(space);\n      } else {\n        console.log(\"You own this utility.\");\n      }\n    } else {\n      this.offerPurchase(space);\n    }\n  }\n\n  buyProperty(space) {\n    if (this.money >= space.price) {\n      this.money -= space.price;\n      this.properties.push(space);\n      space.owner = this;\n      console.log(`${this.name} bought ${space.name} for $${space.price}`);\n    } else {\n      console.log(\n        `${this.name} does not have enough money to buy ${space.name}`\n      );\n    }\n  }\n\n  payRent(space) {\n    const rent = space.rent;\n    this.money -= rent;\n    space.owner.money += rent;\n    console.log(\n      `${this.name} paid $${rent} rent to ${space.owner.name} for ${space.name}`\n    );\n    if (this.money <= 0) {\n      this.declareBankruptcy();\n    }\n  }\n  payRailroadRent(space) {\n    // Simplified railroad rent based on number of railroads owned\n    const numRailroads = space.owner.properties.filter(\n      (prop) => prop.type === \"railroad\"\n    ).length;\n    let rent = space.rent; // Base rent\n    if (numRailroads === 2) rent = 50;\n    else if (numRailroads === 3) rent = 100;\n    else if (numRailroads === 4) rent = 200;\n\n    this.money -= rent;\n    space.owner.money += rent;\n    console.log(\n      `${this.name} paid $${rent} rent to ${space.owner.name} for ${space.name}`\n    );\n    if (this.money <= 0) {\n      this.declareBankruptcy();\n    }\n  }\n\n  payUtilityRent(space) {\n    // Rent for utility is dice roll * multiplier (4 or 10)\n    const diceRoll = rollDice();\n    let multiplier = 4;\n    if (\n      space.owner.properties.filter((prop) => prop.type === \"utility\")\n        .length === 2\n    ) {\n      multiplier = 10;\n    }\n    const rent = diceRoll * multiplier;\n\n    this.money -= rent;\n    space.owner.money += rent;\n    console.log(\n      `${this.name} rolled ${diceRoll} and paid $${rent} rent to ${space.owner.name} for ${space.name}`\n    );\n    if (this.money <= 0) {\n      this.declareBankruptcy();\n    }\n  }\n\n  payTax(space) {\n    let taxAmount = space.name === \"Income Tax\" ? 200 : 100; // Example tax amounts\n    this.money -= taxAmount;\n    console.log(`${this.name} paid $${taxAmount} for ${space.name}`);\n    if (this.money <= 0) {\n      this.declareBankruptcy();\n    }\n  }\n\n  collectGo() {\n    this.money += 200;\n    console.log(`${this.name} collected $200 for passing Go.`);\n  }\n\n  goToJail() {\n    this.inJail = true;\n    this.jailTurns = 3; // Standard 3 turns in jail\n    this.position = 10; // Jail position\n    console.log(`${this.name} is sent to Jail!`);\n  }\n\n  drawCommunityChest() {\n    // Placeholder for Community Chest logic\n    console.log(`${this.name} drew a Community Chest card.`);\n  }\n\n  drawChance() {\n    // Placeholder for Chance logic\n    console.log(`${this.name} drew a Chance card.`);\n  }\n  offerPurchase(space) {\n    // Basic purchase offer - improve with UI and player choice\n    if (\n      confirm(\n        `${this.name}, do you want to buy ${space.name} for $${space.price}?`\n      )\n    ) {\n      this.buyProperty(space);\n    } else {\n      console.log(`${this.name} declined to buy ${space.name}.`);\n    }\n  }\n\n  declareBankruptcy() {\n    console.log(`${this.name} has declared bankruptcy and is out of the game!`);\n    // Implement logic to remove player from the game, transfer assets, etc.\n  }\n}\n\n// Helper Functions\nfunction rollDice() {\n  return Math.floor(Math.random() * 6) + 1; // Dice roll between 1-6\n}\n\n// Example game setup\nconst player1 = new Player(\"Alice\");\nconst player2 = new Player(\"Bob\");\n\n// Example gameplay\nplayer1.move(rollDice() + rollDice());\nplayer2.move(rollDice() + rollDice());\nplayer1.move(5);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}